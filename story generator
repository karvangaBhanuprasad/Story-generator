<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Story Generator ✨</title>
  <style>
    /* Enhanced Background with more vibrant colors */
    body {
      margin: 0;
      padding: 0;
      font-family: "Poppins", sans-serif;
      background: linear-gradient(135deg, #ff9a9e, #fad0c4, #a1c4fd, #c2e9fb, #c2ffd8, #d4fc79);
      background-size: 600% 600%;
      animation: gradientMove 15s ease infinite;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      overflow: hidden;
      position: relative;
    }
    @keyframes gradientMove {
      0% {background-position: 0% 50%;}
      50% {background-position: 100% 50%;}
      100% {background-position: 0% 50%;}
    }

    /* Improved Card with glassmorphism effect */
    .container {
      background: rgba(255, 255, 255, 0.8);
      backdrop-filter: blur(15px);
      padding: 40px;
      border-radius: 30px;
      box-shadow: 0 15px 35px rgba(0,0,0,0.25);
      max-width: 800px;
      width: 95%;
      position: relative;
      z-index: 2;
      border: 1px solid rgba(255, 255, 255, 0.3);
    }

    h1 {
      font-size: 3rem;
      color: #2c3e50;
      margin-bottom: 20px;
      text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
    }

    p {
      font-size: 1.2rem;
      margin-bottom: 25px;
      color: #4a5568;
    }

    input {
      width: 85%;
      padding: 15px;
      border-radius: 20px;
      border: 2px solid #e2e8f0;
      font-size: 1.1rem;
      outline: none;
      transition: border 0.3s, box-shadow 0.3s;
    }
    input:focus {
      border-color: #667eea;
      box-shadow: 0 0 10px rgba(102, 126, 234, 0.5);
    }

    button {
      margin-top: 20px;
      background: linear-gradient(45deg, #0a0dc3, #cf086c, #e49103, #10b981, #3b82f6);
      background-size: 400% 400%;
      color: white;
      font-size: 1.2rem;
      padding: 15px 35px;
      border: none;
      border-radius: 40px;
      cursor: pointer;
      box-shadow: 0 8px 20px rgba(0,0,0,0.3);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      animation: gradientBG 8s ease infinite;
    }
    button:hover {
      transform: scale(1.12) rotate(-3deg);
      box-shadow: 0 12px 30px rgba(0,0,0,0.4);
    }
    @keyframes gradientBG {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    /* Enhanced Story Display with scroll and better typography */
    #story {
      margin-top: 25px;
      padding: 25px;
      background: #f9fafb;
      border-radius: 25px;
      font-size: 1.3rem;
      line-height: 1.8;
      max-height: 400px;
      overflow-y: auto;
      opacity: 0;
      transform: translateY(30px) scale(0.95);
      transition: all 0.8s ease-in-out;
      box-shadow: inset 0 2px 10px rgba(0,0,0,0.05);
    }
    #story.show {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
    #story em {
      display: block;
      margin-top: 20px;
      font-size: 1.1rem;
      color: #718096;
      font-style: italic;
      border-top: 1px solid #e2e8f0;
      padding-top: 15px;
    }

    /* More dynamic Floating Emoji Background with variety */
    .emoji {
      position: absolute;
      font-size: 2.5rem;
      opacity: 0.6;
      animation: floatUp 15s linear infinite;
      bottom: -60px;
      z-index: 1;
    }
    @keyframes floatUp {
      0% { transform: translateY(0) rotate(0deg); opacity: 0.6; }
      50% { opacity: 0.9; transform: translateY(-60vh) rotate(180deg); }
      100% { transform: translateY(-120vh) rotate(360deg); opacity: 0; }
    }

    /* Loading Spinner */
    #loader {
      display: none;
      margin-top: 20px;
      border: 6px solid #f3f4f6;
      border-top: 6px solid #6366f1;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      margin: 20px auto;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>✨ Random Story Generator ✨</h1>
    <p>Enter a word, idea, or theme (e.g., dragon adventure, robot chef, magical chocolate) and let the magic unfold into a longer, enchanting tale!</p>
    <input type="text" id="userInput" placeholder="e.g. dragon, robot chef, enchanted forest"/>
    <br>
    <button onclick="generateStory()">Generate Epic Story 🎉</button>
    <div id="loader"></div>
    <div id="story"></div>
  </div>

  <script>
    // Expanded arrays for more variety and longer stories
    const characters = [
      "curious explorer", "brave knight", "mischievous fairy", "wise old wizard",
      "adventurous pirate", "clever inventor", "friendly alien", "daring superhero",
      "playful mermaid", "mysterious detective"
    ];

    const settings = [
      "in the bustling streets of Paris 🇫🇷", "deep within a lush jungle 🌴", "among the stars in outer space 🌌",
      "inside a spooky haunted castle 🏰", "on a sunny tropical beach 🏖️", "atop a rumbling volcano 🌋",
      "in a whimsical candy land 🍭", "beneath the waves under the sea 🌊", "on the cratered surface of the moon 🌙",
      "within a hidden secret garden 🌹", "in a neon-lit futuristic city 🌆", "in an ancient enchanted forest 🍄"
    ];

    const incitingActions = [
      "stumbled upon a hidden treasure map 💰", "discovered a long-lost artifact 🏺",
      "encountered a strange glowing portal 🌐", "befriended a talking animal 🐾",
      "invented a gadget that changed everything ⚙️", "received a mysterious invitation 📜",
      "witnessed a magical phenomenon ✨", "embarked on a quest for a legendary item 🗡️",
      "solved an ancient riddle 🧩", "rescued a fellow traveler in distress 🆘"
    ];

    const conflicts = [
      "but faced a fierce rival who wanted it too 😠", "only to be chased by shadowy creatures 👻",
      "when suddenly a storm brewed out of nowhere ⛈️", "while dodging clever traps and puzzles 🕳️",
      "as an evil sorcerer plotted against them 🧙‍♂️", "amidst a rebellion in the land ⚔️",
      "with time running out before disaster struck ⏰", "battling doubts and fears along the way 😟",
      "navigating through treacherous terrains 🏞️", "uncovering secrets that shook their world 🔍"
    ];

    const resolutions = [
      "and with quick thinking, overcame the challenge victoriously 🏆", "forging new alliances to turn the tide 🤝",
      "using their wits to outsmart the obstacles cleverly 🧠", "discovering inner strength they never knew 💪",
      "leading to a grand celebration of peace and joy 🎊", "restoring balance to the world with harmony 🌍",
      "unveiling a greater truth that inspired all 📖", "ending with a heartfelt reunion of friends 👫",
      "transforming enemies into allies through kindness ❤️", "paving the way for future adventures 🚀"
    ];

    const morals = [
      "🌟 Imagination is the key to unlocking endless possibilities.",
      "💖 True friendship can conquer even the greatest challenges.",
      "🌈 Embrace the unknown, for it holds the greatest treasures.",
      "🚀 Courage isn't the absence of fear, but the triumph over it.",
      "✨ Every journey teaches us something valuable about ourselves.",
      "🧠 Wisdom comes from learning through trials and errors.",
      "🎉 Joy is found in sharing adventures with others.",
      "❤️ Kindness can change the course of any story.",
      "🌍 Unity brings strength in times of adversity.",
      "💫 Dreams become reality with perseverance and heart."
    ];

    function generateStory() {
      const userInput = document.getElementById("userInput").value.trim();
      const userWord = userInput || "enchanted wanderer"; // Default if empty

      // Randomly select elements
      const mainCharacter = characters[Math.floor(Math.random() * characters.length)];
      const setting = settings[Math.floor(Math.random() * settings.length)];
      const incitingAction = incitingActions[Math.floor(Math.random() * incitingActions.length)];
      const conflict = conflicts[Math.floor(Math.random() * conflicts.length)];
      const resolution = resolutions[Math.floor(Math.random() * resolutions.length)];
      const moral = morals[Math.floor(Math.random() * morals.length)];

      // Incorporate user input creatively: use it as part of the character or theme
      const characterDescription = `${mainCharacter} inspired by ${userWord}`;

      // Longer story structure: 4-5 paragraphs
      const storyText = `
        Once upon a time, there was a ${characterDescription}. This extraordinary being lived a quiet life until one fateful day when everything changed.
        
        Venturing ${setting}, our hero ${incitingAction}. Excitement filled the air as they delved deeper into the mystery, uncovering wonders beyond imagination. The world around them buzzed with energy, from twinkling lights to whispering winds, setting the stage for an unforgettable adventure.
        
        However, the path was not easy ${conflict}. Twists and turns tested their resolve, forcing them to make tough decisions and face unexpected dangers. With each step, they learned more about themselves and the world, growing stronger amidst the chaos.
        
        In the end, through determination and cleverness, they ${resolution}. The experience left an indelible mark, transforming not just their own life but inspiring those around them.
        
        <em>Moral: ${moral}</em>
      `;

      const storyDiv = document.getElementById("story");
      const loader = document.getElementById("loader");

      // Show loader
      loader.style.display = "block";
      storyDiv.classList.remove("show");

      setTimeout(() => {
        loader.style.display = "none";
        storyDiv.innerHTML = storyText;
        storyDiv.classList.add("show");
        storyDiv.scrollTop = 0; // Scroll to top
      }, 800); // Simulate "AI thinking" time
    }

    // Enhanced Floating emoji background with more emojis
    const emojis = ["✨", "🌈", "🎉", "🌟", "🪐", "🍭", "💫", "🎶", "🚀", "🦄", "🔮", "🌺", "🎨", "🧙"];
    function createEmoji() {
      const emoji = document.createElement("div");
      emoji.className = "emoji";
      emoji.innerText = emojis[Math.floor(Math.random() * emojis.length)];
      emoji.style.left = Math.random() * 100 + "vw";
      emoji.style.animationDuration = (10 + Math.random() * 8) + "s";
      emoji.style.fontSize = (2 + Math.random() * 1.5) + "rem";
      document.body.appendChild(emoji);
      setTimeout(() => emoji.remove(), 15000);
    }
    setInterval(createEmoji, 600);
  </script>
</body>
</html>